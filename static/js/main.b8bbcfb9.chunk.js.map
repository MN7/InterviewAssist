{"version":3,"sources":["Questions/components/TestCases.js","Questions/Q001.js","Questions/Q002.js","Questions/Q003.js","Questions/Q004.js","Questions/CodeQ0.js","MyClass.js","App.js","index.js"],"names":["TestCases","props","handleClick","inpParamsArr","idx","handleCalculate","state","cAnswers","uAnswers","length","toString","setState","btnText","false","true","this","testCasesArr","forEach","el","push","map","tc","cAnswer","uAnswer","className","reduce","fin","itm","pName","JSON","stringify","pValue","slice","value","onChange","e","target","disabled","onClick","testCaseElt","Component","Q001","pType","questCode","split","ln","arr","Math","round","Q002","max","w","Q003","Q004","filter","x","pop","CodeQ0","a","chosenQ","codeqs","text","testCases","caseNum","inpEltName","inpEltValue","outEltValue","cq","i","v","MyClass","questions","q","App","d","Date","dt","toISOString","substring","toLocaleTimeString","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b8bbcfb9.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../../styles.css\";\n\nclass TestCases extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cAnswers: [],\n      uAnswers: [],\n      btnText: { false: \"Clear\", true: \"Calculate\" },\n    };\n  }\n\n  handleClick = (inpParamsArr, idx, handleCalculate) => {\n    const { cAnswers, uAnswers } = this.state;\n    cAnswers[idx] =\n      cAnswers[idx].length === 0\n        ? handleCalculate(inpParamsArr).toString()\n        : \"\";\n    if (cAnswers[idx].length === 0) uAnswers[idx] = \"\";\n    this.setState({ cAnswers, uAnswers });\n  };\n\n  render() {\n    const { cAnswers, uAnswers, btnText } = this.state;\n    const { testCasesArr, handleCalculate } = this.props;\n    testCasesArr.forEach((el) => {\n      cAnswers.push(\"\");\n      uAnswers.push(\"\");\n    });\n    const testCaseElt = (\n      idx,\n      inpParamsArr,\n      handleCalculate,\n      cAnswer,\n      uAnswer // {pName} = {pValue.toString()}\n    ) => (\n      <>\n        <div key={idx} className=\"sameLine\">\n          Case {idx + 1}:{\" \"}\n          {inpParamsArr\n            .reduce(\n              (fin, itm) =>\n                (fin += itm.pName + \" = \" + JSON.stringify(itm.pValue) + \", \"),\n              \"\"\n            )\n            .slice(0, -2)}{\" \"}\n          &emsp; Your answer:\n          <input\n            value={uAnswer}\n            onChange={(e) => {\n              uAnswers[idx] = e.target.value;\n              this.setState({ uAnswers });\n            }}\n          />\n          <button\n            disabled={uAnswers[idx].length === 0}\n            onClick={() => {\n              this.handleClick(inpParamsArr, idx, handleCalculate);\n            }}\n          >\n            {btnText[cAnswer.length === 0]}\n          </button>\n          &emsp;\n          {!!cAnswer && (\n            <label className={cAnswer === uAnswer ? \"goodjob\" : \"\"}>\n              Computed answer:&emsp;{cAnswer}{\" \"}\n              {cAnswer === uAnswer && \"-- Correct answer!\"}\n            </label>\n          )}\n        </div>\n        <hr />\n      </>\n    );\n    const resultElt = (\n      <>\n        {testCasesArr.map((tc) =>\n          testCaseElt(\n            tc.idx,\n            tc.inpParamsArr,\n            handleCalculate,\n            cAnswers[tc.idx],\n            uAnswers[tc.idx]\n          )\n        )}\n      </>\n    );\n    return resultElt;\n  }\n}\n\nTestCases.propTypes = {\n  testCasesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      idx: PropTypes.number,\n      inpParamsArr: PropTypes.arrayOf(\n        PropTypes.shape({\n          pName: PropTypes.string,\n          pValue: PropTypes.any,\n          pType: PropTypes.oneOf([\"number\", \"string\", \"array\", undefined]),\n        })\n      ).isRequired,\n    })\n  ),\n  handleCalculate: PropTypes.func.isRequired,\n};\n\nexport default TestCases;\n","import \"../styles.css\";\nimport TestCases from \"./components/TestCases\";\n\nconst Q001 = () => {\n  const questFunc = (arr) => {\n    return Math.round(arr[0].pValue * 100) / 100;\n  };\n\n  const testCasesArr = [\n    {\n      idx: 0,\n      inpParamsArr: [{ pName: \"v\", pValue: 1.2345, pType: \"number\" }],\n    },\n    {\n      idx: 1,\n      inpParamsArr: [{ pName: \"v\", pValue: 9.8765, pType: \"number\" }],\n    },\n  ];\n\n  const questCode = `// Consider ${testCasesArr[0].inpParamsArr[0].pName}: ${testCasesArr[0].inpParamsArr[0].pValue}\n  function f1(v) {\n    return Math.round( v * 100 ) / 100;\n  };`;\n\n  const retVal = (\n    <div className=\"sameCol\">\n      <div>Question 1 - Rounding</div>\n      <div>\n        <pre>\n          {questCode.split(\"\\n\").map((ln) => (\n            <code>{ln + \"\\n\"}</code>\n          ))}\n        </pre>\n      </div>\n      <hr />\n      <TestCases testCasesArr={testCasesArr} handleCalculate={questFunc} />\n      <hr />\n    </div>\n  );\n\n  return retVal;\n};\n\nexport default Q001;\n","import \"../styles.css\";\nimport TestCases from \"./components/TestCases\";\n\nconst Q002 = () => {\n  const questFunc = (arr) => {\n    return Math.max(...arr[0].pValue.split(\" \").map((w) => w.length));\n  };\n\n  const testCasesArr = [\n    {\n      idx: 0,\n      inpParamsArr: [\n        {\n          pName: \"paragraph\",\n          pValue: \"Two plus two equals four\",\n          pType: \"string\",\n        },\n      ],\n    },\n    {\n      idx: 1,\n      inpParamsArr: [\n        {\n          pName: \"paragraph\",\n          pValue:\n            \"This paragraph is not very long as it comprises only of one sentence\",\n          pType: \"string\",\n        },\n      ],\n    },\n  ];\n\n  const questCode = `// Consider ${testCasesArr[0].inpParamsArr[0].pName}: ${testCasesArr[0].inpParamsArr[0].pValue}\n  const f2 = (paragraph) => {\n    return Math.max(\n      ...paragraph.split(' ').map(w => w.length)\n      );\n  };`;\n\n  const retVal = (\n    <div className=\"sameCol\">\n      <div>Question 2 - Paragraph Split</div>\n      <div>\n        <pre>\n          {questCode.split(\"\\n\").map((ln) => (\n            <code>{ln + \"\\n\"}</code>\n          ))}\n        </pre>\n      </div>\n      <hr />\n      <TestCases testCasesArr={testCasesArr} handleCalculate={questFunc} />\n      <hr />\n    </div>\n  );\n\n  return retVal;\n};\n\nexport default Q002;\n","import \"../styles.css\";\nimport TestCases from \"./components/TestCases\";\n\nconst Q003 = () => {\n  const questFunc = (arr) => {\n    return JSON.stringify(\n      arr[0].pValue.reduce(\n        (fin, itm) => ({ ...fin, [itm]: (fin[itm] || 0) + 1 }),\n        {}\n      )\n    );\n  };\n\n  const testCasesArr = [\n    {\n      idx: 0,\n      inpParamsArr: [\n        {\n          pName: \"arr\",\n          pValue: [\"a\", \"a\", \"c\", \"b\", \"a\", \"b\"],\n          pType: \"array\",\n        },\n      ],\n    },\n    {\n      idx: 1,\n      inpParamsArr: [\n        {\n          pName: \"arr\",\n          pValue: [\"abc\", \"abc\", \"ca\", \"ac\", \"ca\", \"xyb\"],\n          pType: \"array\",\n        },\n      ],\n    },\n  ];\n\n  const questCode = `// Consider ${testCasesArr[0].inpParamsArr[0].pName}: ${testCasesArr[0].inpParamsArr[0].pValue}\n  function f3 (arr) => {\n    const res = {}\n    for (let i = 0; i < arr.length; i++) {\n      const val = res[arr[i]] || 0;\n      res[arr[i]] = val + 1;\n    }\n    return res;\n  };`;\n\n  const retVal = (\n    <div className=\"sameCol\">\n      <div>Question 3 - Key Value Pairs</div>\n      <div>\n        <pre>\n          {questCode.split(\"\\n\").map((ln) => (\n            <code>{ln + \"\\n\"}</code>\n          ))}\n        </pre>\n      </div>\n      <hr />\n      <TestCases testCasesArr={testCasesArr} handleCalculate={questFunc} />\n      <hr />\n    </div>\n  );\n\n  return retVal;\n};\n\nexport default Q003;\n","import \"../styles.css\";\nimport TestCases from \"./components/TestCases\";\n\nconst Q004 = () => {\n  const questFunc = (arr) => {\n    return arr[0].pValue\n      .reduce(\n        (fin, itm) => [\n          ...fin.filter((x) => x <= itm),\n          itm,\n          ...fin.filter((x) => x > itm),\n        ],\n        []\n      )\n      .pop();\n  };\n\n  const testCasesArr = [\n    {\n      idx: 0,\n      inpParamsArr: [\n        {\n          pName: \"inpArr\",\n          pValue: [\"a\", \"m\", \"d\", \"k\", \"g\"],\n          pType: \"array\",\n        },\n      ],\n    },\n    {\n      idx: 1,\n      inpParamsArr: [\n        {\n          pName: \"inpArr\",\n          pValue: [1, 3, 7, 2, 4, 5, 0, 6],\n          pType: \"array\",\n        },\n      ],\n    },\n  ];\n\n  const questCode = `// Consider ${testCasesArr[0].inpParamsArr[0].pName}: ${testCasesArr[0].inpParamsArr[0].pValue}\n  function f4(inpArr, inpIdx = 0, outArr = []) {\n    if (inpIdx === inpArr.length) return outArr.pop();\n    for (let outIdx = 0; outIdx < outArr.length; outIdx++) {\n      if (inpArr[inpIdx] < outArr[outIdx]) {\n        return f4(inpArr, inpIdx + 1, [\n          ...outArr.slice(0, outIdx),\n          inpArr[inpIdx],\n          ...outArr.slice(outIdx)\n        ]);\n      }\n    }\n    return f4(inpArr, inpIdx + 1, outArr.concat(inpArr[inpIdx]));\n  };`;\n\n  const retVal = (\n    <div className=\"sameCol\">\n      <div>Question 3 - Key Value Pairs</div>\n      <div>\n        <pre>\n          {questCode.split(\"\\n\").map((ln) => (\n            <code>{ln + \"\\n\"}</code>\n          ))}\n        </pre>\n      </div>\n      <hr />\n      <TestCases testCasesArr={testCasesArr} handleCalculate={questFunc} />\n      <hr />\n    </div>\n  );\n\n  return retVal;\n};\n\nexport default Q004;\n","import { Component } from \"react\";\nimport \"../styles.css\";\n\nexport default class CodeQ0 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chosenQ: -1,\n      codeqs: [\n        {\n          idx: 0,\n          text:\n            \"Given an array of strings, generate an object with keys as unique strings in the array & values as number of times the key has occurred in the array.\",\n          testCases: [\n            {\n              caseNum: 0,\n              inpEltName: \"InputArray\",\n              inpEltValue: \"[ 'a', 'a', 'd', 'b', 'd', 'c', 'a', 'b']\",\n              outEltValue: \"{'a' : 3, 'b' : 2, 'd' : 2 ,'c' : 1}\"\n            },\n            {\n              caseNum: 1,\n              inpEltName: \"InputArray\",\n              inpEltValue:\n                \"[ 'abc', 'adcb', 'aa', 'abc', 'ad', 'abc', 'aa', 'ba', 'aa', 'aa', 'adcb' ]\",\n              outEltValue: \"{ aa : 4, abc : 3, ad : 1, adcb : 2, ba : 1 }\"\n            }\n          ]\n        },\n        {\n          idx: 1,\n          text:\n            \"Given a paragraph (ie, string), generate a map (ie, key-value pair) where key is length (integer) and value is an array of words (in paragraph) where length = key.\",\n          testCases: [\n            {\n              caseNum: 0,\n              inpEltName: \"InputString\",\n              inpEltValue: \"'Two plus two equals four'\",\n              outEltValue: `{ $\n              3: ['Two', 'two'], $\n              4: ['plus', 'four'], $\n              6: ['equals'] $\n        }`\n            },\n            {\n              caseNum: 1,\n              inpEltName: \"InputString\",\n              inpEltValue:\n                \"'This paragraph is not very long as it comprises only of one sentence'\",\n              outEltValue: `{ $\n          2 : ['is', 'as', 'it', 'of'], $\n          3 : ['not', 'one'], $\n          4 : ['This', 'very', 'long', 'only'], $\n          8 : ['sentence'], $\n          9 : ['paragraph', 'comprises'] $\n         }`\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  handleClick = (a) => {\n    this.setState({});\n  };\n\n  render() {\n    const { codeqs, chosenQ } = this.state;\n    const retVal = (\n      <>\n        <div className=\"sameLine\">\n          {codeqs.map((cq, i) => (\n            <button\n              key={i}\n              onClick={() => {\n                this.setState({ chosenQ: i });\n              }}\n            >\n              {\"Question \" + (i + 1)}\n            </button>\n          ))}\n          {chosenQ !== -1 && (\n            <button\n              onClick={() => {\n                this.setState({ chosenQ: -1 });\n              }}\n            >\n              Clear Question\n            </button>\n          )}\n        </div>\n        <div className=\"sameCol\">\n          {chosenQ !== -1 &&\n            codeqs\n              .filter((cq) => cq.idx === chosenQ)\n              .map((cq, i) => {\n                return (\n                  <div key={i}>\n                    <p>{cq.text}</p>\n                    {cq.testCases.map((tc) => {\n                      return (\n                        <div>\n                          <p>Test Case {tc.caseNum + 1}</p>\n                          <p>{tc.inpEltName}: </p>\n                          <code>{tc.inpEltValue}</code>\n                          <p>Expected output:</p>\n                          <code>\n                            {tc.outEltValue.split(\"$\").map((v) => (\n                              <span>{v}</span>\n                            ))}\n                          </code>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n        </div>\n      </>\n    );\n    return retVal;\n  }\n}\n","import { Component } from \"react\";\nimport \"./styles.css\";\nimport { CodeQ0, Q001, Q002, Q003, Q004 } from \"./Questions\";\n\nexport default class MyClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [<Q001 />, <Q002 />, <Q003 />, <Q004 />],\n      chosenQ: -1,\n    };\n  }\n\n  render() {\n    const { questions, chosenQ } = this.state;\n\n    const retval = (\n      <>\n        <div className=\"sameCol\">\n          <h4>Understanding Code Snippets</h4>\n          <div className=\"sameLine\">\n            {questions.map((q, i) => {\n              return (\n                <button\n                  key={i}\n                  onClick={() => {\n                    this.setState({ chosenQ: i });\n                  }}\n                >\n                  {\"Question \" + (i + 1)}\n                </button>\n              );\n            })}\n            {chosenQ !== -1 && (\n              <button\n                onClick={() => {\n                  this.setState({ chosenQ: -1 });\n                }}\n              >\n                Clear Question\n              </button>\n            )}\n          </div>\n          <hr />\n          <h6>\n            Please use pen/pencil, paper as needed for code-snippet questions\n          </h6>\n          <hr />\n          {chosenQ !== -1 && questions[chosenQ]}\n          <hr />\n          <hr />\n        </div>\n        <div>\n          <h4>Developing Code</h4>\n          <CodeQ0 />\n        </div>\n      </>\n    );\n    return retval;\n  }\n}\n","import MyClass from \"./MyClass\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const d = new Date();\n  const dt =\n    d.toISOString().substring(0, 10) +\n    \" \" +\n    d.toLocaleTimeString().substring(0, 5);\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Technical Discussion - {dt}</h1>\n      <h2>JavaScript Knowledge & Experience preferred</h2>\n      <MyClass />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}