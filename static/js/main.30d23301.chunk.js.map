{"version":3,"sources":["Questions/Q001.js","Questions/Q002.js","Questions/Q003.js","Questions/Q004.js","Questions/CodeQ0.js","MyClass.js","App.js","index.js"],"names":["Q001","props","q1","a","console","log","Math","round","handleClick","svn","setState","state","length","toString","q1c1answer","q1c2answer","c1useranswer","c2useranswer","ce1","false","true","btnText","className","value","this","onChange","e","target","disabled","onClick","Component","Q002","q2","c1answer","c2answer","paragraph","max","split","map","w","Q004","iArr","iIdx","oArr","pop","oIdx","f4","slice","concat","CodeQ0","chosenQ","codeqs","idx","text","testCases","caseNum","inpEltName","inpEltValue","outEltValue","cq","i","filter","tc","v","MyClass","questions","q","App","d","Date","dt","toISOString","substring","toLocaleTimeString","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.30d23301.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport \"../styles.css\";\n\nexport default class Q001 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      q1c1answer: \"\",\n      q1c2answer: \"\",\n      c1useranswer: \"\",\n      c2useranswer: \"\",\n      ce1: { false: \"Clear\", true: \"Show\" },\n      btnText: { false: \"Clear\", true: \"Calculate\" }\n    };\n  }\n\n  q1 = (a) => {\n    console.log(\"a: \" + a);\n\n    return Math.round(a * 100) / 100;\n  };\n\n  handleClick = (a, svn) => {\n    this.setState({\n      [svn]: this.state[svn].length === 0 ? this.q1(a).toString() : \"\"\n    });\n  };\n\n  render() {\n    const retVal = (\n      <div className=\"sameCol\">\n        <div>Question 1 - Rounding</div>\n        <div>\n          <code>01 &emsp; {\"function f1(v) {\"}</code>\n        </div>\n        <div>\n          <code>02 &emsp; &emsp; {\"return Math.round( v * 100 ) / 100\"}</code>\n        </div>\n        <div>\n          <code>03 &emsp; {\"};\"}</code>\n        </div>\n        <hr />\n        <div className=\"sameLine\">\n          Case 1: v = 1.23456 &emsp; Your answer:\n          <input\n            value={this.state.c1useranswer}\n            onChange={(e) => {\n              this.setState({ c1useranswer: e.target.value });\n            }}\n          />\n          <button\n            disabled={this.state.c1useranswer.length === 0}\n            onClick={() => {\n              this.handleClick(1.23456, \"q1c1answer\");\n            }}\n          >\n            {this.state.btnText[this.state.q1c1answer.length === 0]}\n          </button>\n          &emsp;\n          {!!this.state.q1c1answer && (\n            <label\n              className={\n                this.state.q1c1answer === this.state.c1useranswer\n                  ? \"goodjob\"\n                  : \"\"\n              }\n            >\n              Computed answer:&emsp;{this.state.q1c1answer}{\" \"}\n              {this.state.q1c1answer === this.state.c1useranswer &&\n                \"-- Correct answer!\"}\n            </label>\n          )}\n        </div>\n        <hr />\n        <div className=\"sameLine\">\n          Case 2: v = 9.87654 &emsp; Your answer:\n          <input\n            value={this.state.c2useranswer}\n            onChange={(e) => {\n              this.setState({ c2useranswer: e.target.value });\n            }}\n          />\n          <button\n            disabled={this.state.c2useranswer.length === 0}\n            onClick={() => {\n              this.handleClick(9.87654, \"q1c2answer\");\n            }}\n          >\n            {this.state.btnText[this.state.q1c2answer.length === 0]}\n          </button>\n          &emsp;\n          {!!this.state.q1c2answer && (\n            <label\n              className={\n                this.state.q1c2answer === this.state.c2useranswer\n                  ? \"goodjob\"\n                  : \"\"\n              }\n            >\n              Computed answer:&emsp;{this.state.q1c2answer}{\" \"}\n              {this.state.q1c2answer === this.state.c2useranswer &&\n                \"-- Correct answer!\"}\n            </label>\n          )}\n        </div>\n      </div>\n    );\n\n    return retVal;\n  }\n}\n","import { Component } from \"react\";\nimport \"../styles.css\";\n\nexport default class Q002 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      c1useranswer: \"\",\n      c2useranswer: \"\",\n      c1answer: \"\",\n      c2answer: \"\",\n      ce1: { false: \"Clear\", true: \"Show\" },\n      btnText: { false: \"Clear\", true: \"Calculate\" }\n    };\n  }\n\n  q2(paragraph) {\n    return Math.max(...paragraph.split(\" \").map((w) => w.length));\n  }\n\n  handleClick = (a, svn) => {\n    this.setState({\n      [svn]: this.state[svn].length === 0 ? this.q2(a).toString() : \"\"\n    });\n  };\n\n  render() {\n    const retVal = (\n      <div className=\"sameCol\">\n        <div>Question 2 - Paragraph Split</div>\n        <div>\n          <code>01 &emsp; {\"const f2 = (paragraph) => {\"}</code>\n        </div>\n        <div>\n          <code>02 &emsp; &emsp; {\"return Math.max(\"}</code>\n        </div>\n        <div>\n          <code>\n            03 &emsp; &emsp; &emsp;{\" \"}\n            {\"...paragraph.split(' ').map(w => w.length)\"}\n          </code>\n        </div>\n        <div>\n          <code>04 &emsp; &emsp; &emsp; {\");\"}</code>\n        </div>\n        <div>\n          <code>05 &emsp; {\"}\"}</code>\n        </div>\n        <hr />\n        <div className=\"sameLine\">\n          Case 1: paragraph = 'Two plus two equals four' &emsp; Your answer:\n          <input\n            value={this.state.c1useranswer}\n            onChange={(e) => {\n              this.setState({ c1useranswer: e.target.value });\n            }}\n          />\n          <button\n            disabled={this.state.c1useranswer.length === 0}\n            onClick={() => {\n              this.state.c1answer.length === 0\n                ? this.handleClick(\"Two plus two equals four\", \"c1answer\")\n                : this.setState({\n                    c1answer: \"\",\n                    c1useranswer: \"\"\n                  });\n            }}\n          >\n            {this.state.btnText[this.state.c1answer.length === 0]}\n          </button>\n          {!!this.state.c1answer.length && (\n            <label\n              className={\n                this.state.c1answer === this.state.c1useranswer ? \"goodjob\" : \"\"\n              }\n            >\n              Computed answer:&emsp;{this.state.c1answer}{\" \"}\n              {this.state.c1answer === this.state.c1useranswer &&\n                \"-- Correct answer!\"}\n            </label>\n          )}\n        </div>\n        <hr />\n        <div className=\"sameLine\">\n          Case 2: paragraph = 'This paragraph is not very long as it comprises\n          only of one sentence' &emsp; Your answer:\n          <input\n            value={this.state.c2useranswer}\n            onChange={(e) => {\n              this.setState({ c2useranswer: e.target.value });\n            }}\n          />\n          <button\n            disabled={this.state.c2useranswer.length === 0}\n            onClick={() => {\n              this.state.c2answer.length === 0\n                ? this.handleClick(\n                    \"This paragraph is not very long as it comprises only of one sentence\",\n                    \"c2answer\"\n                  )\n                : this.setState({\n                    c2answer: \"\",\n                    c2useranswer: \"\"\n                  });\n            }}\n          >\n            {this.state.btnText[this.state.c2answer.length === 0]}\n          </button>\n          {!!this.state.c2answer.length && (\n            <label\n              className={\n                this.state.c2answer === this.state.c2useranswer ? \"goodjob\" : \"\"\n              }\n            >\n              Computed answer:&emsp;{this.state.c2answer}{\" \"}\n              {this.state.c2answer === this.state.c2useranswer &&\n                \"-- Correct answer!\"}\n            </label>\n          )}\n        </div>\n      </div>\n    );\n\n    return retVal;\n  }\n}\n","import { Component } from \"react\";\nimport \"../styles.css\";\n\nexport default class Q002 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  q2 = (a) => {};\n\n  handleClick = (a) => {\n    this.setState({});\n  };\n\n  render() {\n    const retVal = (\n      <div className=\"sameCol\">\n        <div>Question 3 - Key Value Pairs</div>\n        <div>\n          <code>01 &emsp; {\"function f3 (arr) {\"}</code>\n        </div>\n        <div>\n          <code>02 &emsp; &emsp; {\"const res = {};\"}</code>\n        </div>\n        <div>\n          <code>\n            03 &emsp; &emsp; {\"for (let i = 0; i < arr.length; i++) {\"}\n          </code>\n        </div>\n        <div>\n          <code>04 &emsp; &emsp; &emsp; {\"const val = res[arr[i]] || 0;\"}</code>\n        </div>\n        <div>\n          <code>05 &emsp; &emsp; &emsp; {\"res[arr[i]] = val + 1;\"}</code>\n        </div>\n        <div>\n          <code>06 &emsp; &emsp; {\"}\"}</code>\n        </div>\n        <div>\n          <code>07 &emsp; &emsp; {\"return res;\"}</code>\n        </div>\n        <div>\n          <code>08 &emsp; {\"}\"}</code>\n        </div>\n        <hr />\n        <div className=\"sameLine\">Case 1</div>\n        <div> arr = ['a', 'a', 'c', 'b', 'a', 'b']</div>\n        <hr />\n        <div className=\"sameLine\">Case 2</div>\n        <div> arr = ['abc', 'abc', 'ca', 'ac', 'ca', 'xyb']</div>\n      </div>\n    );\n\n    return retVal;\n  }\n}\n","import { Component } from \"react\";\nimport \"../styles.css\";\n\nexport default class Q004 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      c1answer: \"\",\n      c2answer: \"\",\n      c1useranswer: \"\",\n      c2useranswer: \"\",\n      ce1: { false: \"Clear\", true: \"Show\" },\n      btnText: { false: \"Clear\", true: \"Calculate\" }\n    };\n  }\n\n  f4(iArr, iIdx = 0, oArr = []) {\n    if (iIdx === iArr.length) return oArr.pop();\n    for (let oIdx = 0; oIdx < oArr.length; oIdx++) {\n      if (iArr[iIdx] < oArr[oIdx])\n        return this.f4(iArr, iIdx + 1, [\n          ...oArr.slice(0, oIdx),\n          iArr[iIdx],\n          ...oArr.slice(oIdx)\n        ]);\n    }\n    return this.f4(iArr, iIdx + 1, oArr.concat(iArr[iIdx]));\n  }\n\n  handleClick(a, svn) {\n    this.setState({\n      [svn]: this.state[svn].length === 0 ? this.f4(a).toString() : \"\"\n    });\n  }\n\n  render() {\n    const retVal = (\n      <div className=\"sameCol\">\n        <div>Question 4 - Array Slice</div>\n        <div>\n          <code>01 &emsp; {\"function f4(iArr, iIdx = 0, oArr = []) {\"}</code>\n        </div>\n        <div>\n          <code>\n            02 &emsp; &emsp; {\"if (iIdx === iArr.length) return oArr.pop();\"}\n          </code>\n        </div>\n        <div>\n          <code>\n            03 &emsp; &emsp;{\" \"}\n            {\"for (let oIdx = 0; oIdx < oArr.length; oIdx++) {\"}\n          </code>\n        </div>\n        <div>\n          <code>\n            04 &emsp; &emsp; &emsp; &emsp; {\"if (iArr[iIdx] < oArr[oIdx])\"}\n          </code>\n        </div>\n        <div>\n          <code>\n            05 &emsp; &emsp; &emsp; &emsp; {\"return f4(iArr, iIdx + 1, [\"}\n          </code>\n        </div>\n        <div>\n          <code>\n            06 &emsp; &emsp; &emsp; &emsp; &emsp; &emsp;{\" \"}\n            {\"...oArr.slice(0, oIdx), \"}\n          </code>\n        </div>\n        <div>\n          <code>\n            07 &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; {\"iArr[iIdx], \"}\n          </code>\n        </div>\n        <div>\n          <code>\n            08 &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; {\"...oArr.slice(oIdx)\"}\n          </code>\n        </div>\n        <div>\n          <code>09 &emsp; &emsp; &emsp; &emsp; {\"]);\"}</code>\n        </div>\n        <div>\n          <code>10 &emsp; &emsp; {\"}\"}</code>\n        </div>\n        <div>\n          <code>\n            11 &emsp; &emsp;{\" \"}\n            {\"return f4(iArr, iIdx + 1, oArr.concat(iArr[iIdx]));\"}\n          </code>\n        </div>\n        <div>\n          <code>12 &emsp; {\"};\"}</code>\n        </div>\n        <hr />\n        <div className=\"sameLine\">\n          Case 1: iArr = [1, 3, 7, 2, 4, 5, 0, 6] &emsp; Your answer:\n          <input\n            value={this.state.c1useranswer}\n            onChange={(e) => {\n              this.setState({ c1useranswer: e.target.value });\n            }}\n          />\n          <button\n            disabled={this.state.c1useranswer.length === 0}\n            onClick={() => {\n              this.state.c1answer.length === 0\n                ? this.handleClick([1, 3, 7, 2, 4, 5, 0, 6], \"c1answer\")\n                : this.setState({\n                    c1answer: \"\",\n                    c1useranswer: \"\"\n                  });\n            }}\n          >\n            {this.state.btnText[this.state.c1answer.length === 0]}\n          </button>\n          {!!this.state.c1answer.length && (\n            <label\n              className={\n                this.state.c1answer === this.state.c1useranswer ? \"goodjob\" : \"\"\n              }\n            >\n              Computed answer:&emsp;{this.state.c1answer}{\" \"}\n              {this.state.c1answer === this.state.c1useranswer &&\n                \"-- Correct answer!\"}\n            </label>\n          )}\n        </div>\n        <hr />\n        <div className=\"sameLine\">\n          Case 2: iArr = [\"a\", \"m\", \"d\", \"k\", \"g\"] &emsp; Your answer:\n          <input\n            value={this.state.c2useranswer}\n            onChange={(e) => {\n              this.setState({ c2useranswer: e.target.value });\n            }}\n          />\n          <button\n            disabled={this.state.c2useranswer.length === 0}\n            onClick={() => {\n              this.state.c2answer.length === 0\n                ? this.handleClick([\"a\", \"m\", \"d\", \"k\", \"g\"], \"c2answer\")\n                : this.setState({\n                    c2answer: \"\",\n                    c2useranswer: \"\"\n                  });\n            }}\n          >\n            {this.state.btnText[this.state.c2answer.length === 0]}\n          </button>\n          {!!this.state.c2answer.length && (\n            <label\n              className={\n                this.state.c2answer === this.state.c2useranswer ? \"goodjob\" : \"\"\n              }\n            >\n              Computed answer:&emsp;{this.state.c2answer}{\" \"}\n              {this.state.c2answer === this.state.c2useranswer &&\n                \"-- Correct answer!\"}\n            </label>\n          )}\n        </div>\n      </div>\n    );\n\n    return retVal;\n  }\n}\n","import { Component } from \"react\";\nimport \"../styles.css\";\n\nexport default class CodeQ0 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chosenQ: -1,\n      codeqs: [\n        {\n          idx: 0,\n          text:\n            \"Given an array of strings, generate an object with keys as unique strings in the array & values as number of times the key has occurred in the array.\",\n          testCases: [\n            {\n              caseNum: 0,\n              inpEltName: \"InputArray\",\n              inpEltValue: \"[ 'a', 'a', 'd', 'b', 'd', 'c', 'a', 'b']\",\n              outEltValue: \"{'a' : 3, 'b' : 2, 'd' : 2 ,'c' : 1}\"\n            },\n            {\n              caseNum: 1,\n              inpEltName: \"InputArray\",\n              inpEltValue:\n                \"[ 'abc', 'adcb', 'aa', 'abc', 'ad', 'abc', 'aa', 'ba', 'aa', 'aa', 'adcb' ]\",\n              outEltValue: \"{ aa : 4, abc : 3, ad : 1, adcb : 2, ba : 1 }\"\n            }\n          ]\n        },\n        {\n          idx: 1,\n          text:\n            \"Given a paragraph (ie, string), generate a map (ie, key-value pair) where key is length (integer) and value is an array of words (in paragraph) where length = key.\",\n          testCases: [\n            {\n              caseNum: 0,\n              inpEltName: \"InputString\",\n              inpEltValue: \"'Two plus two equals four'\",\n              outEltValue: `{ $\n              3: ['Two', 'two'], $\n              4: ['plus', 'four'], $\n              6: ['equals'] $\n        }`\n            },\n            {\n              caseNum: 1,\n              inpEltName: \"InputString\",\n              inpEltValue:\n                \"'This paragraph is not very long as it comprises only of one sentence'\",\n              outEltValue: `{ $\n          2 : ['is', 'as', 'it', 'of'], $\n          3 : ['not', 'one'], $\n          4 : ['This', 'very', 'long', 'only'], $\n          8 : ['sentence'], $\n          9 : ['paragraph', 'comprises'] $\n         }`\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  handleClick = (a) => {\n    this.setState({});\n  };\n\n  render() {\n    const { codeqs, chosenQ } = this.state;\n    const retVal = (\n      <>\n        <div className=\"sameLine\">\n          {codeqs.map((cq, i) => (\n            <button\n              key={i}\n              onClick={() => {\n                this.setState({ chosenQ: i });\n              }}\n            >\n              {\"Question \" + (i + 1)}\n            </button>\n          ))}\n          {chosenQ !== -1 && (\n            <button\n              onClick={() => {\n                this.setState({ chosenQ: -1 });\n              }}\n            >\n              Clear Question\n            </button>\n          )}\n        </div>\n        <div className=\"sameCol\">\n          {chosenQ !== -1 &&\n            codeqs\n              .filter((cq) => cq.idx === chosenQ)\n              .map((cq, i) => {\n                return (\n                  <div key={i}>\n                    <p>{cq.text}</p>\n                    {cq.testCases.map((tc) => {\n                      return (\n                        <div>\n                          <p>Test Case {tc.caseNum + 1}</p>\n                          <p>{tc.inpEltName}: </p>\n                          <code>{tc.inpEltValue}</code>\n                          <p>Expected output:</p>\n                          <code>\n                            {tc.outEltValue.split(\"$\").map((v) => (\n                              <span>{v}</span>\n                            ))}\n                          </code>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n        </div>\n      </>\n    );\n    return retVal;\n  }\n}\n","import { Component } from \"react\";\nimport \"./styles.css\";\nimport { CodeQ0, Q001, Q002, Q003, Q004 } from \"./Questions\";\n\nexport default class MyClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [<Q001 />, <Q002 />, <Q003 />, <Q004 />],\n      chosenQ: -1\n    };\n  }\n\n  render() {\n    const { questions, chosenQ } = this.state;\n\n    const retval = (\n      <>\n        <div className=\"sameCol\">\n          <h4>Understanding Code Snippets</h4>\n          <div className=\"sameLine\">\n            {questions.map((q, i) => {\n              return (\n                <button\n                  key={i}\n                  onClick={() => {\n                    this.setState({ chosenQ: i });\n                  }}\n                >\n                  {\"Question \" + (i + 1)}\n                </button>\n              );\n            })}\n            {chosenQ !== -1 && (\n              <button\n                onClick={() => {\n                  this.setState({ chosenQ: -1 });\n                }}\n              >\n                Clear Question\n              </button>\n            )}\n          </div>\n          <hr />\n          <h6>\n            Please use pen/pencil, paper as needed for code-snippet questions\n          </h6>\n          <hr />\n          {chosenQ !== -1 && questions[chosenQ]}\n          <hr />\n          <hr />\n        </div>\n        <div>\n          <h4>Developing Code</h4>\n          <CodeQ0 />\n        </div>\n      </>\n    );\n    return retval;\n  }\n}\n","import MyClass from \"./MyClass\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const d = new Date();\n  const dt =\n    d.toISOString().substring(0, 10) +\n    \" \" +\n    d.toLocaleTimeString().substring(0, 5);\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Technical Discussion - {dt}</h1>\n      <h2>JavaScript Knowledge & Experience preferred</h2>\n      <MyClass />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}